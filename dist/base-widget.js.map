{"version":3,"sources":["../src/base-widget.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAA,EAAyB,MAAO,eAAA,CAAgB;AACzD,OAAO,EAAE,iBAAA,EAAkB,MAAO,iBAAA,CAAkB;AACpD,OAAO,EAAE,IAAA,EAAK,MAAO,WAAA,CAAY;AAGjC,OAAO,EAAE,GAAA,EAAI,MAAO,SAAA,CAAU;AAE9B;IAAA;IAkBA,CAAC;IAAD,aAAC;AAAD,CAlBA,AAkBC,IAAA;;AAOD;IAYE,oBAAoB,cAA6B,EAAE,UAAkB;QAArE,iBAEC;QAFmB,mBAAc,GAAd,cAAc,CAAe;QAkB1C,gBAAW,GAAG,UACnB,KAAS,EACT,gBAAyB;YAEzB,EAAE,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBACrB,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;oBAC5B,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACrB,CAAC,CAAC,CAAC;YACL,CAAC;YAED,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC,CAAC;QA5BA,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC;IAC5B,CAAC;IAEM,iCAAY,GAAnB,UAAoB,SAAoB,EAAE,OAAoB;QAApB,wBAAA,EAAA,YAAoB;QAC5D,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC;IAC3D,CAAC;IAEM,6BAAQ,GAAf;QACE,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC7C,CAAC;IAEM,gCAAW,GAAlB;QACE,EAAE,CAAC,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAChD,CAAC;IACH,CAAC;IAcI,yBAAc,GAA2C;QAChE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC5B,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;KAC3B,CAAC;IACF,iBAAC;CA9CD,AA8CC,IAAA;SA9CY,UAAU","file":"base-widget.js","sourceRoot":"","sourcesContent":["import { Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { isPlatformBrowser } from \"@angular/common\";\nimport { noop } from \"lodash-es\";\n\nimport { NgAisInstance } from \"./instantsearch/instantsearch-instance\";\nimport { bem } from \"./utils\";\n\nexport class Widget {\n  public init: () => void;\n  public getConfiguration: () => object;\n  public render: (\n    params: {\n      templatesConfig: object;\n      state: object;\n      results: {}[];\n      createURL: (value: any) => string;\n      instantSearchInstance: object;\n    }\n  ) => void;\n  public dispose: (\n    params: {\n      helper: object;\n      state: object;\n    }\n  ) => object | void;\n}\n\nexport type Connector = (\n  renderFn: (state: object, isFirstRendering: boolean) => void,\n  unmountFn: () => void\n) => (widgetOptions?: object) => Widget;\n\nexport class BaseWidget implements OnInit, OnDestroy {\n  // ssr platformId\n  public plateformId: Object;\n\n  // header footer\n   public header?: string;\n   public footer?: string;\n\n  public widget?: Widget;\n  public state?: object;\n  public cx?: Function;\n\n  constructor(private searchInstance: NgAisInstance, widgetName: string) {\n    this.cx = bem(widgetName);\n  }\n\n  public createWidget(connector: Connector, options: object = {}) {\n    this.widget = connector(this.updateState, noop)(options);\n  }\n\n  public ngOnInit() {\n    this.searchInstance.addWidget(this.widget);\n  }\n\n  public ngOnDestroy() {\n    if (isPlatformBrowser(this.plateformId)) {\n      this.searchInstance.removeWidget(this.widget);\n    }\n  }\n\n  public updateState = (\n    state: {},\n    isFirstRendering: boolean\n  ): Promise<void> | void => {\n    if (isFirstRendering) {\n      return Promise.resolve().then(() => {\n        this.state = state;\n      });\n    }\n\n    this.state = state;\n  };\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'footer': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}