{"version":3,"sources":["../../src/current-refinements/current-refinements.ts"],"names":[],"mappings":"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","file":"current-refinements.js","sourceRoot":"","sourcesContent":["import { Component, Input, Inject, PLATFORM_ID } from \"@angular/core\";\nimport { connectCurrentRefinedValues } from \"instantsearch.js/es/connectors\";\nimport { noop, isFunction } from \"lodash-es\";\n\nimport { BaseWidget } from \"../base-widget\";\nimport { NgAisInstance } from \"../instantsearch/instantsearch-instance\";\n\nexport type CurrentRefinementsState = {\n  attributes: {};\n  clearAllClick: Function;\n  clearAllURL: Function;\n  createURL: Function;\n  refine: Function;\n  refinements: {}[];\n};\n\n\nexport class NgAisCurrentRefinements extends BaseWidget {\n  // render options\n   public clearRefinements: \"before\" | \"after\" | boolean = \"before\";\n   public clearRefinementsLabel: string = \"Clear refinements\";\n   public transformItems?: Function;\n\n  // connector options\n   public onlyListedAttributes: boolean = false;\n   public clearsQuery: boolean = false;\n  \n  public attributes: {\n    name: string;\n    label: string;\n  }[] = [];\n\n  public state: CurrentRefinementsState = {\n    attributes: {},\n    clearAllClick: noop,\n    clearAllURL: noop,\n    createURL: noop,\n    refine: noop,\n    refinements: []\n  };\n\n  get refinements() {\n    return isFunction(this.transformItems)\n      ? this.transformItems(this.state.refinements)\n      : this.state.refinements;\n  }\n\n  constructor(\n     public platformId: Object,\n    searchInstance: NgAisInstance\n  ) {\n    super(searchInstance, \"CurrentRefinements\");\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectCurrentRefinedValues, {\n      attributes: this.attributes,\n      clearsQuery: this.clearsQuery,\n      onlyListedAttributes: this.onlyListedAttributes\n    });\n    super.ngOnInit();\n  }\n\n  public handleClick(event: MouseEvent, refinement: {}) {\n    event.preventDefault();\n    this.state.refine(refinement);\n  }\n\n  public handleClearAllClick(event: MouseEvent) {\n    event.preventDefault();\n    this.state.clearAllClick();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: \"ng-ais-current-refinements\",\n  template: `\n    <div [class]=\"cx()\">\n      <ng-ais-header [header]=\"header\" [className]=\"cx('header')\"></ng-ais-header>\n\n      <div [class]=\"cx('body')\">\n        <button\n          [class]=\"cx('reset')\"\n          (click)=\"handleClearAllClick($event)\"\n          *ngIf=\"clearRefinements === 'before' || clearRefinements === true\">\n          {{clearRefinementsLabel}}\n        </button>\n\n        <ul [class]=\"cx('list')\">\n          <li\n            [class]=\"cx('item')\"\n            *ngFor=\"let refinement of refinements\"\n            (click)=\"handleClick($event, refinement)\"\n          >\n            <button [class]=\"cx('button')\">\n              {{refinement.computedLabel}}\n              <span [class]=\"cx('count')\">{{refinement.count}}</span>\n            </button>\n          </li>\n        </ul>\n\n        <button\n          [class]=\"cx('reset')\"\n          (click)=\"handleClearAllClick($event)\"\n          *ngIf=\"clearRefinements === 'after'\">\n          {{clearRefinementsLabel}}\n        </button>\n      </div>\n\n      <ng-ais-footer [footer]=\"footer\" [className]=\"cx('footer')\"></ng-ais-footer>\n    </div>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID, ] }, ]},\n{type: NgAisInstance, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'clearRefinements': [{ type: Input },],\n'clearRefinementsLabel': [{ type: Input },],\n'transformItems': [{ type: Input },],\n'onlyListedAttributes': [{ type: Input },],\n'clearsQuery': [{ type: Input },],\n'attributes': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}