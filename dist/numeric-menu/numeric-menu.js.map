{"version":3,"sources":["../../src/numeric-menu/numeric-menu.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,SAAA,EAAW,KAAA,EAAO,MAAA,EAAQ,WAAA,EAAY,MAAO,eAAA,CAAgB;AACtE,OAAO,EAAE,4BAAA,EAA6B,MAAO,gCAAA,CAAiC;AAC9E,OAAO,EAAE,IAAA,EAAK,MAAO,WAAA,CAAY;AAEjC,OAAO,EAAE,UAAA,EAAW,MAAO,gBAAA,CAAiB;AAC5C,OAAO,EAAE,aAAA,EAAc,MAAO,yCAAA,CAA0C;AASxE;IAAsC,oCAAU;IAe9C,0BACU,UAAkB,EAC1B,cAA6B;QAF/B,YAIE,kBAAM,cAAc,EAAE,aAAa,CAAC,SACrC;QAJS,gBAAU,GAAV,UAAU,CAAQ;QAPrB,WAAK,GAA+B;YACzC,SAAS,EAAE,IAAI;YACf,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,IAAI;SACb,CAAC;;IAOF,CAAC;IAEM,mCAAQ,GAAf;QACE,IAAI,CAAC,YAAY,CAAC,4BAA4B,EAAE;YAC9C,aAAa,EAAE,IAAI,CAAC,aAAa;YACjC,OAAO,EAAE,IAAI,CAAC,OAAO;SACtB,CAAC,CAAC;QACH,iBAAM,QAAQ,WAAE,CAAC;IACnB,CAAC;IAEM,iCAAM,GAAb,UAAc,KAAiB,EAAE,IAAuB;QACtD,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IACI,2BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,qBAAqB;oBAC/B,QAAQ,EAAE,g2BA0BT;iBACF,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,+BAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,WAAW,EAAG,EAAE,EAAG,EAAC;QACvE,EAAC,IAAI,EAAE,aAAa,GAAG;KACtB,EAH6F,CAG7F,CAAC;IACK,+BAAc,GAA2C;QAChE,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QACnC,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;KAC5B,CAAC;IACF,uBAAC;CA5ED,AA4EC,CA5EqC,UAAU,GA4E/C;SA5EY,gBAAgB","file":"numeric-menu.js","sourceRoot":"","sourcesContent":["import { Component, Input, Inject, PLATFORM_ID } from \"@angular/core\";\nimport { connectNumericRefinementList } from \"instantsearch.js/es/connectors\";\nimport { noop } from \"lodash-es\";\n\nimport { BaseWidget } from \"../base-widget\";\nimport { NgAisInstance } from \"../instantsearch/instantsearch-instance\";\n\nexport type NumericRefinementListState = {\n  createURL: Function;\n  items: {}[];\n  refine: Function;\n};\n\n\nexport class NgAisNumericMenu extends BaseWidget {\n   public attributeName: string;\n  \n  public options: {\n    name: string;\n    start?: number;\n    end?: number;\n  }[];\n\n  public state: NumericRefinementListState = {\n    createURL: noop,\n    items: [],\n    refine: noop\n  };\n\n  constructor(\n     public platformId: Object,\n    searchInstance: NgAisInstance\n  ) {\n    super(searchInstance, \"NumericMenu\");\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectNumericRefinementList, {\n      attributeName: this.attributeName,\n      options: this.options\n    });\n    super.ngOnInit();\n  }\n\n  public refine(event: MouseEvent, item: { value: string }) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.state.refine(item.value);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: \"ng-ais-numeric-menu\",\n  template: `\n    <div [class]=\"cx()\">\n      <ng-ais-header [header]=\"header\" [className]=\"cx('header')\"></ng-ais-header>\n\n      <div [class]=\"cx('body')\">\n        <ul [class]=\"cx('list')\">\n          <li\n            [class]=\"cx('item') + (item.isRefined ? (' ' + cx('item', 'selected')) : '')\"\n            *ngFor=\"let item of state.items\"\n            (click)=\"refine($event, item)\"\n          >\n            <label [class]=\"cx('label')\">\n              <input\n                [class]=\"cx('radio')\"\n                type=\"radio\"\n                name=\"NumericRefinementList\"\n                [checked]=\"item.isRefined\"\n              />\n              {{item.label}}\n            </label>\n          </li>\n        </ul>\n      </div>\n\n      <ng-ais-footer [footer]=\"footer\" [className]=\"cx('footer')\"></ng-ais-footer>\n    </div>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID, ] }, ]},\n{type: NgAisInstance, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'attributeName': [{ type: Input },],\n'options': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}