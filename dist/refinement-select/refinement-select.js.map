{"version":3,"sources":["../../src/refinement-select/refinement-select.ts"],"names":[],"mappings":"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","file":"refinement-select.js","sourceRoot":"","sourcesContent":["import { Component, Input, Inject, PLATFORM_ID } from \"@angular/core\";\nimport { connectRefinementList } from \"instantsearch.js/es/connectors\";\nimport { noop, isFunction } from \"lodash-es\";\n\nimport { BaseWidget } from \"../base-widget\";\nimport { NgAisInstance } from \"../instantsearch/instantsearch-instance\";\nimport { parseNumberInput } from \"../utils\";\n\nexport type RefinementSelectState = {\n  canRefine: boolean;\n  canToggleShowMore: boolean;\n  createURL: Function;\n  isShowingMore: boolean;\n  items: {}[];\n  refine: Function;\n  toggleShowMore: Function;\n  searchForItems: Function;\n  isFormSearch: boolean;\n};\n\n\nexport class NgAisRefinementSelect extends BaseWidget {\n  // render options\n   public showMoreLabel: string = \"Show more\";\n   public showLessLabel: string = \"Show less\";\n   public transformItems?: Function;\n   public withSearchBox?: boolean;\n   public searchPlaceholder: string = \"Search here...\";\n\n  // connectors options\n   public attributeName: string;\n   public operator: \"or\" | \"and\" = \"or\";\n   public limitMin: number | string = 10;\n   public limitMax: number | string;\n   public sortBy: string[] | ((item: object) => number);\n\n  // inner state\n  searchQuery = \"\";\n\n  public state: RefinementSelectState = {\n    canRefine: false,\n    canToggleShowMore: false,\n    createURL: noop,\n    isShowingMore: false,\n    items: [],\n    refine: noop,\n    toggleShowMore: noop,\n    searchForItems: noop,\n    isFormSearch: false\n  };\n\n  constructor( public platformId: Object, searchInstance: NgAisInstance) {\n    super(searchInstance, \"RefinementSelect\");\n  }\n\n  get items() {\n    return isFunction(this.transformItems)\n      ? this.transformItems(this.state.items)\n      : this.state.items;\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectRefinementList, {\n      limit: parseNumberInput(this.limitMin),\n      showMoreLimit: parseNumberInput(this.limitMax),\n      attributeName: this.attributeName,\n      sortBy: this.sortBy,\n      escapeFacetValues: true\n    });\n\n    super.ngOnInit();\n  }\n\n  public refine(event: MouseEvent, item: {isRefined: boolean; value: string}) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this.state.canRefine) {\n      // update UI directly, it will update the checkbox state\n      item.isRefined = !item.isRefined;\n\n      // refine through Algolia API\n      this.state.refine(item.value);\n    }\n  }\n\n  handleSubmit(event: MouseEvent) {\n    event.preventDefault();\n    this.state.searchForItems(this.searchQuery);\n  }\n\n  handleChange(value: string) {\n    this.searchQuery = value;\n    this.state.searchForItems(value);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: \"ng-ais-refinement-select\",\n  template: `\n      <div [class]=\"cx()\">\n          <ng-ais-header [header]=\"header\" [className]=\"cx('header')\"></ng-ais-header>\n\n          <div [class]=\"cx('body')\">\n              <form\n                      [class]=\"cx('form')\"\n                      *ngIf=\"withSearchBox\"\n                      (submit)=\"handleSubmit($event)\"\n                      novalidate\n              >\n                  <input\n                          [class]=\"cx('input')\"\n                          autocapitalize=\"off\"\n                          autocorrect=\"off\"\n                          placeholder=\"{{searchPlaceholder}}\"\n                          role=\"textbox\"\n                          spellcheck=\"false\"\n                          type=\"text\"\n                          [value]=\"searchQuery\"\n                          (input)=\"handleChange($event.target.value)\"\n                  />\n              </form>\n\n              <select [class]=\"cx('list')\">\n                  <option [class]=\"cx('item') + (item.isRefined ? cx('item', 'selected') : '')\"\n                          *ngFor=\"let item of items\"\n                          (click)=\"refine($event, item)\"\n                          value=\"{{item.value}}\"\n                  >\n                    <span [class]=\"cx('label')\">\n                      <ng-ais-highlight\n                              attributeName=\"highlighted\"\n                              [hit]=\"item\"\n                      >\n                      </ng-ais-highlight>\n                      <span [class]=\"cx('count')\">\n                        {{item.count}}\n                      </span>\n                    </span>\n                  </option>\n              </select>\n\n              <button\n                      *ngIf=\"state.canToggleShowMore\"\n                      (click)=\"state.toggleShowMore()\"\n              >\n                  {{state.isShowingMore ? showLessLabel : showMoreLabel}}\n              </button>\n          </div>\n\n          <ng-ais-footer [footer]=\"footer\" [className]=\"cx('footer')\"></ng-ais-footer>\n      </div>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID, ] }, ]},\n{type: NgAisInstance, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'showMoreLabel': [{ type: Input },],\n'showLessLabel': [{ type: Input },],\n'transformItems': [{ type: Input },],\n'withSearchBox': [{ type: Input },],\n'searchPlaceholder': [{ type: Input },],\n'attributeName': [{ type: Input },],\n'operator': [{ type: Input },],\n'limitMin': [{ type: Input },],\n'limitMax': [{ type: Input },],\n'sortBy': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}