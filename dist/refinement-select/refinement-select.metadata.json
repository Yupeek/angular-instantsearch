[{"__symbolic":"module","version":3,"metadata":{"RefinementSelectState":{"__symbolic":"interface"},"NgAisRefinementSelect":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"../base-widget","name":"BaseWidget"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"ng-ais-refinement-select","template":"\n      <div [class]=\"cx()\">\n          <ng-ais-header [header]=\"header\" [className]=\"cx('header')\"></ng-ais-header>\n\n          <div [class]=\"cx('body')\">\n              <form\n                      [class]=\"cx('form')\"\n                      *ngIf=\"withSearchBox\"\n                      (submit)=\"handleSubmit($event)\"\n                      novalidate\n              >\n                  <input\n                          [class]=\"cx('input')\"\n                          autocapitalize=\"off\"\n                          autocorrect=\"off\"\n                          placeholder=\"{{searchPlaceholder}}\"\n                          role=\"textbox\"\n                          spellcheck=\"false\"\n                          type=\"text\"\n                          [value]=\"searchQuery\"\n                          (input)=\"handleChange($event.target.value)\"\n                  />\n              </form>\n\n              <select [class]=\"cx('list')\">\n                  <option [class]=\"cx('item') + (item.isRefined ? cx('item', 'selected') : '')\"\n                          *ngFor=\"let item of items\"\n                          (click)=\"refine($event, item)\"\n                          value=\"{{item.value}}\"\n                  >\n                    <span [class]=\"cx('label')\">\n                      <ng-ais-highlight\n                              attributeName=\"highlighted\"\n                              [hit]=\"item\"\n                      >\n                      </ng-ais-highlight>\n                      <span [class]=\"cx('count')\">\n                        {{item.count}}\n                      </span>\n                    </span>\n                  </option>\n              </select>\n\n              <button\n                      *ngIf=\"state.canToggleShowMore\"\n                      (click)=\"state.toggleShowMore()\"\n              >\n                  {{state.isShowingMore ? showLessLabel : showMoreLabel}}\n              </button>\n          </div>\n\n          <ng-ais-footer [footer]=\"footer\" [className]=\"cx('footer')\"></ng-ais-footer>\n      </div>\n  "}]}],"members":{"showMoreLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"showLessLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"transformItems":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"withSearchBox":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"searchPlaceholder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"attributeName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"operator":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"limitMin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"limitMax":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"sortBy":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject"},"arguments":[{"__symbolic":"reference","module":"@angular/core","name":"PLATFORM_ID"}]}],null],"parameters":[{"__symbolic":"reference","name":"Object"},{"__symbolic":"reference","module":"../instantsearch/instantsearch-instance","name":"NgAisInstance"}]}],"ngOnInit":[{"__symbolic":"method"}],"refine":[{"__symbolic":"method"}],"handleSubmit":[{"__symbolic":"method"}],"handleChange":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"RefinementSelectState":{"__symbolic":"interface"},"NgAisRefinementSelect":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"../base-widget","name":"BaseWidget"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"ng-ais-refinement-select","template":"\n      <div [class]=\"cx()\">\n          <ng-ais-header [header]=\"header\" [className]=\"cx('header')\"></ng-ais-header>\n\n          <div [class]=\"cx('body')\">\n              <form\n                      [class]=\"cx('form')\"\n                      *ngIf=\"withSearchBox\"\n                      (submit)=\"handleSubmit($event)\"\n                      novalidate\n              >\n                  <input\n                          [class]=\"cx('input')\"\n                          autocapitalize=\"off\"\n                          autocorrect=\"off\"\n                          placeholder=\"{{searchPlaceholder}}\"\n                          role=\"textbox\"\n                          spellcheck=\"false\"\n                          type=\"text\"\n                          [value]=\"searchQuery\"\n                          (input)=\"handleChange($event.target.value)\"\n                  />\n              </form>\n\n              <select [class]=\"cx('list')\">\n                  <option [class]=\"cx('item') + (item.isRefined ? cx('item', 'selected') : '')\"\n                          *ngFor=\"let item of items\"\n                          (click)=\"refine($event, item)\"\n                          value=\"{{item.value}}\"\n                  >\n                    <span [class]=\"cx('label')\">\n                      <ng-ais-highlight\n                              attributeName=\"highlighted\"\n                              [hit]=\"item\"\n                      >\n                      </ng-ais-highlight>\n                      <span [class]=\"cx('count')\">\n                        {{item.count}}\n                      </span>\n                    </span>\n                  </option>\n              </select>\n\n              <button\n                      *ngIf=\"state.canToggleShowMore\"\n                      (click)=\"state.toggleShowMore()\"\n              >\n                  {{state.isShowingMore ? showLessLabel : showMoreLabel}}\n              </button>\n          </div>\n\n          <ng-ais-footer [footer]=\"footer\" [className]=\"cx('footer')\"></ng-ais-footer>\n      </div>\n  "}]}],"members":{"showMoreLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"showLessLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"transformItems":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"withSearchBox":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"searchPlaceholder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"attributeName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"operator":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"limitMin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"limitMax":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"sortBy":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject"},"arguments":[{"__symbolic":"reference","module":"@angular/core","name":"PLATFORM_ID"}]}],null],"parameters":[{"__symbolic":"reference","name":"Object"},{"__symbolic":"reference","module":"../instantsearch/instantsearch-instance","name":"NgAisInstance"}]}],"ngOnInit":[{"__symbolic":"method"}],"refine":[{"__symbolic":"method"}],"handleSubmit":[{"__symbolic":"method"}],"handleChange":[{"__symbolic":"method"}]}}}}]