{"version":3,"sources":["../../src/results/results.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,EACL,MAAM,EACN,KAAK,EACL,SAAS,EACT,YAAY,EACZ,WAAW,EACX,WAAW,EACZ,MAAM,eAAA,CAAgB;AAEvB,OAAO,EAAE,WAAA,EAAY,MAAO,gCAAA,CAAiC;AAC7D,OAAO,EAAE,UAAA,EAAW,MAAO,WAAA,CAAY;AAEvC,OAAO,EAAE,UAAA,EAAW,MAAO,gBAAA,CAAiB;AAC5C,OAAO,EAAE,aAAA,EAAc,MAAO,yCAAA,CAA0C;AAGxE;IAAkC,gCAAU;IAS1C,sBACU,WAAmB,EAC3B,cAA6B;QAF/B,YAIE,kBAAM,cAAc,EAAE,SAAS,CAAC,SAEjC;QALS,iBAAW,GAAX,WAAW,CAAQ;QAJ7B,6CAA6C;QACtC,WAAK,GAAgC,EAAE,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;QAUtE,iBAAW,GAAG,UACZ,KAAkC,EAClC,gBAAyB;YAEzB,EAAE,CAAC,CAAC,gBAAgB,CAAC;gBAAC,MAAM,CAAC;YAE7B,KAAI,CAAC,KAAK,gBACL,KAAK,IACR,OAAO,EAAE,KAAK,CAAC,OAAO,EACtB,IAAI,EAAE,UAAU,CAAC,KAAI,CAAC,cAAc,CAAC;oBACnC,CAAC,CAAC,KAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC;oBACjC,CAAC,CAAC,KAAK,CAAC,IAAI,GACf,CAAC;QACJ,CAAC,CAAC;QAhBA,KAAI,CAAC,YAAY,CAAC,WAAW,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;;IACvD,CAAC;IAgBI,uBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,gBAAgB;oBAC1B,QAAQ,EAAE,uwBAuBT;iBACF,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,2BAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,WAAW,EAAG,EAAE,EAAG,EAAC;QACvE,EAAC,IAAI,EAAE,aAAa,GAAG;KACtB,EAH6F,CAG7F,CAAC;IACK,2BAAc,GAA2C;QAChE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,WAAW,EAAG,EAAE,EAAE;QAC5D,gBAAgB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;KACnC,CAAC;IACF,mBAAC;CArED,AAqEC,CArEiC,UAAU,GAqE3C;SArEY,YAAY","file":"results.js","sourceRoot":"","sourcesContent":["import {\n  Inject,\n  Input,\n  Component,\n  ContentChild,\n  TemplateRef,\n  PLATFORM_ID\n} from \"@angular/core\";\n\nimport { connectHits } from \"instantsearch.js/es/connectors\";\nimport { isFunction } from \"lodash-es\";\n\nimport { BaseWidget } from \"../base-widget\";\nimport { NgAisInstance } from \"../instantsearch/instantsearch-instance\";\n\n\nexport class NgAisResults extends BaseWidget {\n   public template?: TemplateRef<any>;\n\n  // render options\n   transformItems?: Function;\n\n  // inner widget state returned from connector\n  public state: { hits: {}[]; results: {} } = { hits: [], results: {} };\n\n  constructor(\n     public plateformId: Object,\n    searchInstance: NgAisInstance\n  ) {\n    super(searchInstance, \"Results\");\n    this.createWidget(connectHits, { escapeHits: true });\n  }\n\n  updateState = (\n    state: { hits: {}[]; results: {} },\n    isFirstRendering: boolean\n  ) => {\n    if (isFirstRendering) return;\n\n    this.state = {\n      ...state,\n      results: state.results,\n      hits: isFunction(this.transformItems)\n        ? this.transformItems(state.hits)\n        : state.hits\n    };\n  };\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: \"ng-ais-results\",\n  template: `\n    <div [class]=\"cx()\">\n      <ng-ais-header [header]=\"header\" [className]=\"cx('header')\"></ng-ais-header>\n\n      <div [class]=\"cx('body')\">\n        <ng-container *ngTemplateOutlet=\"template; context: state\"></ng-container>\n\n        <!-- default rendering if no template specified -->\n        <div *ngIf=\"!template\">\n          <ul [class]=\"cx('list')\">\n            <li\n              [class]=\"cx('item')\"\n              *ngFor=\"let hit of state.hits\"\n            >\n              <ng-ais-highlight attributeName=\"name\" [hit]=\"hit\">\n              </ng-ais-highlight>\n            </li>\n          </ul>\n        </div>\n      </div>\n\n      <ng-ais-footer [footer]=\"footer\" [className]=\"cx('footer')\"></ng-ais-footer>\n    </div>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID, ] }, ]},\n{type: NgAisInstance, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'template': [{ type: ContentChild, args: [TemplateRef, ] },],\n'transformItems': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}