{"version":3,"sources":["../../src/stats/stats.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EACL,SAAS,EACT,YAAY,EACZ,WAAW,EACX,MAAM,EACN,WAAW,EACZ,MAAM,eAAA,CAAgB;AACvB,OAAO,EAAE,YAAA,EAAa,MAAO,gCAAA,CAAiC;AAE9D,OAAO,EAAE,UAAA,EAAW,MAAO,gBAAA,CAAiB;AAC5C,OAAO,EAAE,aAAA,EAAc,MAAO,yCAAA,CAA0C;AAGxE;IAAgC,8BAAU;IAgBxC,oBACU,UAAkB,EAC1B,cAA6B;QAF/B,YAIE,kBAAM,cAAc,EAAE,OAAO,CAAC,SAE/B;QALS,gBAAU,GAAV,UAAU,CAAQ;QAdrB,WAAK,GAAG;YACb,UAAU,EAAE,CAAC;YACb,MAAM,EAAE,CAAC;YACT,OAAO,EAAE,CAAC;YACV,IAAI,EAAE,CAAC;YACP,gBAAgB,EAAE,CAAC;YACnB,KAAK,EAAE,EAAE;SACV,CAAC;QAWA,KAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;;IAClC,CAAC;IAVD,sBAAI,uCAAe;aAAnB;YACE,MAAM,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC;QAC/B,CAAC;;;OAAA;IASI,qBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,cAAc;oBACxB,QAAQ,EAAE,8hBAkBT;iBACF,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,yBAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,WAAW,EAAG,EAAE,EAAG,EAAC;QACvE,EAAC,IAAI,EAAE,aAAa,GAAG;KACtB,EAH6F,CAG7F,CAAC;IACK,yBAAc,GAA2C;QAChE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,WAAW,EAAG,EAAE,EAAE;KAC3D,CAAC;IACF,iBAAC;CAvDD,AAuDC,CAvD+B,UAAU,GAuDzC;SAvDY,UAAU","file":"stats.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  ContentChild,\n  TemplateRef,\n  Inject,\n  PLATFORM_ID\n} from \"@angular/core\";\nimport { connectStats } from \"instantsearch.js/es/connectors\";\n\nimport { BaseWidget } from \"../base-widget\";\nimport { NgAisInstance } from \"../instantsearch/instantsearch-instance\";\n\n\nexport class NgAisStats extends BaseWidget {\n   public template: any;\n\n  public state = {\n    hitPerPage: 0,\n    nbHits: 0,\n    nbPages: 0,\n    page: 0,\n    processingTimeMS: 0,\n    query: \"\"\n  };\n\n  get templateContext() {\n    return { state: this.state };\n  }\n\n  constructor(\n     public platformId: Object,\n    searchInstance: NgAisInstance\n  ) {\n    super(searchInstance, \"Stats\");\n    this.createWidget(connectStats);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: \"ng-ais-stats\",\n  template: `\n    <div [class]=\"cx()\">\n      <ng-ais-header [header]=\"header\" [className]=\"cx('header')\"></ng-ais-header>\n\n      <ng-container\n        [ngClass]=\"cx('body')\"\n        *ngTemplateOutlet=\"template; context: templateContext\">\n      </ng-container>\n\n      <div\n        [class]=\"cx('body')\"\n        *ngIf=\"!template\"\n      >\n        {{state.nbHits}} results found in {{state.processingTimeMS}}ms.\n      </div>\n\n      <ng-ais-footer [footer]=\"footer\" [className]=\"cx('footer')\"></ng-ais-footer>\n    </div>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID, ] }, ]},\n{type: NgAisInstance, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'template': [{ type: ContentChild, args: [TemplateRef, ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}